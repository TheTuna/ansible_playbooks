---

- hosts: all
  become: yes
  vars_files:
    - vars.yml
  pre_tasks:
    - name: Set up grafana repo key
      apt_key:
        url: https://packages.grafana.com/gpg.key
        state: present
        #      when: ansible_os_family == 'Debian'
    - name: Add grafana repo
      apt_repository:
        repo: deb https://packages.grafana.com/oss/deb stable main
        state: present
  
    - name: Update cache
      apt:
        update_cache: yes
    - name: check if user exist and register a variable
      command:
        cmd: "id -u {{ username }}"
      ignore_errors: yes
      register: user_check
    - name: Create dest directory
      file:
        path: "{{ base_path }}/{{ item }}"
        state: directory
        owner: "{{ username }}"
        group: "{{ username }}"
      loop:
        - prometheus
  tasks:
    - name: Download package
      get_url:
        url: "{{ item.url }}"
        dest: "{{ base_path }}/{{ item.dest }}"
        owner: "{{ username }}"
        group: "{{ username }}"
      loop:
        - { url: "https://github.com/prometheus/prometheus/releases/download/v2.30.0/prometheus-2.30.0.linux-armv7.tar.gz", dest: "prometheus"}

    - name: Unarchive prometheus
      unarchive:
        # remove subdir and package var as grafana is installed via deb
        #  src: "{{ base_path }}/{{ item.subdir }}/{{ item.package }}"
        src: "{{ path_to_prometheus_dir  }}" 
          #dest:: "{{ base_path }}/{{ item.subdir }}"
        dest: "{{ path_to_prometheus_dir  }}"
        remote_src: yes
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: "755"
      loop:
        - { subdir: "prometheus", package: "prometheus-2.30.0.linux-armv7.tar.gz"}

    - name: Copy prometheus service file
      copy:
        src: config_files/prometheus.service
        dest: /etc/systemd/system/prometheus.service
      notify: start services

    - name: Install grafana
      apt:
        name: grafana
        state: present

  handlers:
    - name: start services
      service:
        name: "{{ item }}"
        daemon_reload: yes
        enabled: yes
        state: started
      loop:
        - prometheus
        - grafana-server
